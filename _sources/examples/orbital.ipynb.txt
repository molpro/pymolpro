{
 "cells": [
  {
   "cell_type": "markdown",
   "source": [
    "# Generation and use of an orbital-based grid"
   ],
   "metadata": {
    "collapsed": false
   }
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "outputs": [],
   "source": [
    "import pymolpro\n",
    "p = pymolpro.Project(\"orbital\")\n",
    "p.write_input(\"symmetry,nosym;geometry={o;h,o,r;h,o,r,h,theta};r=1 angstrom, theta=104 degree; rhf;locali,pipek,thrpip=1e-10;put,xml\")\n",
    "p.run(wait=True)"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%%\n"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "outputs": [],
   "source": [
    "orbitals = p.orbitals(minocc=1.0)"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%%\n"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1.1 [4.36189315945102e-17, -5.65839184589554e-18, -0.129953086882215] [0.01772806 0.01772858 0.01772861]\n",
      "         0         1         2         3         4         5         6   \\\n",
      "0 -0.079239 -0.023853  0.023853  0.079239 -0.079239 -0.023853  0.023853   \n",
      "1 -0.079238 -0.079238 -0.079238 -0.079238 -0.079238 -0.079238 -0.079238   \n",
      "2 -0.209192 -0.209192 -0.209192 -0.209192 -0.153806 -0.153806 -0.153806   \n",
      "\n",
      "         7         8         9   ...        54        55        56        57  \\\n",
      "0  0.079239 -0.079239 -0.023853  ...  0.023853  0.079239 -0.079239 -0.023853   \n",
      "1 -0.079238 -0.079238 -0.079238  ...  0.079238  0.079238  0.079238  0.079238   \n",
      "2 -0.153806 -0.106100 -0.106100  ... -0.153806 -0.153806 -0.106100 -0.106100   \n",
      "\n",
      "         58        59        60        61        62        63  \n",
      "0  0.023853  0.079239 -0.079239 -0.023853  0.023853  0.079239  \n",
      "1  0.079238  0.079238  0.079238  0.079238  0.079238  0.079238  \n",
      "2 -0.106100 -0.106100 -0.050714 -0.050714 -0.050714 -0.050714  \n",
      "\n",
      "[3 rows x 64 columns]\n",
      "         0         1         2         3         4        5        6   \\\n",
      "0  4.148478  4.946147  4.946147  4.148478  4.942366  6.16284  6.16284   \n",
      "\n",
      "         7         8         9   ...       54        55        56        57  \\\n",
      "0  4.942366  4.939117  6.157132  ...  6.16284  4.942366  4.939117  6.157132   \n",
      "\n",
      "         58        59        60        61        62        63  \n",
      "0  6.157132  4.939117  4.141304  4.935353  4.935353  4.141304  \n",
      "\n",
      "[1 rows x 64 columns]\n",
      "2.1 [-2.23133341860535e-12, -0.78317178943009, 0.524537657987677] [0.44530382 0.45564982 0.9098715 ]\n",
      "         0         1         2         3         4         5         6   \\\n",
      "0 -0.397127 -0.397127 -0.397127 -0.397127 -0.397127 -0.397127 -0.397127   \n",
      "1 -0.543217 -0.870101 -1.151653 -1.478537 -0.384056 -0.710940 -0.992493   \n",
      "2 -0.128179  0.096732  0.290453  0.515364  0.103144  0.328055  0.521776   \n",
      "\n",
      "         7         8         9   ...        54        55        56        57  \\\n",
      "0 -0.397127 -0.397127 -0.397127  ...  0.397127  0.397127  0.397127  0.397127   \n",
      "1 -1.319376 -0.246967 -0.573851  ... -0.992493 -1.319376 -0.246967 -0.573851   \n",
      "2  0.746687  0.302388  0.527299  ...  0.521776  0.746687  0.302388  0.527299   \n",
      "\n",
      "         58        59        60        61        62        63  \n",
      "0  0.397127  0.397127  0.397127  0.397127  0.397127  0.397127  \n",
      "1 -0.855404 -1.182288 -0.087806 -0.414690 -0.696243 -1.023127  \n",
      "2  0.721020  0.945931  0.533711  0.758622  0.952343  1.177254  \n",
      "\n",
      "[3 rows x 64 columns]\n",
      "         0        1         2         3         4         5         6   \\\n",
      "0  0.399322  0.38697  0.338028  0.291293  0.478133  0.440586  0.378372   \n",
      "\n",
      "        7       8         9   ...        54       55      56        57  \\\n",
      "0  0.33094  0.4647  0.433285  ...  0.378372  0.33094  0.4647  0.433285   \n",
      "\n",
      "         58        59        60       61        62        63  \n",
      "0  0.376373  0.332005  0.371588  0.37075  0.332924  0.293541  \n",
      "\n",
      "[1 rows x 64 columns]\n",
      "3.1 [8.26672974408137e-13, 9.77485020009494e-13, -0.732716827889661] [0.46977397 0.49098249 0.50177496]\n",
      "         0         1         2         3         4         5         6   \\\n",
      "0 -0.416999 -0.416999 -0.416999 -0.416999 -0.125526 -0.125526 -0.125526   \n",
      "1  0.421557  0.126898 -0.126898 -0.421557  0.421557  0.126898 -0.126898   \n",
      "2 -1.140610 -1.140610 -1.140610 -1.140610 -1.140610 -1.140610 -1.140610   \n",
      "\n",
      "         7         8         9   ...        54        55        56        57  \\\n",
      "0 -0.125526  0.125526  0.125526  ... -0.125526 -0.125526  0.125526  0.125526   \n",
      "1 -0.421557  0.421557  0.126898  ... -0.126898 -0.421557  0.421557  0.126898   \n",
      "2 -1.140610 -1.140610 -1.140610  ... -0.324824 -0.324824 -0.324824 -0.324824   \n",
      "\n",
      "         58        59        60        61        62        63  \n",
      "0  0.125526  0.125526  0.416999  0.416999  0.416999  0.416999  \n",
      "1 -0.126898 -0.421557  0.421557  0.126898 -0.126898 -0.421557  \n",
      "2 -0.324824 -0.324824 -0.324824 -0.324824 -0.324824 -0.324824  \n",
      "\n",
      "[3 rows x 64 columns]\n",
      "        0         1         2        3         4         5         6   \\\n",
      "0  0.33011  0.372633  0.372633  0.33011  0.371277  0.422702  0.422702   \n",
      "\n",
      "         7         8         9   ...        54        55        56        57  \\\n",
      "0  0.371277  0.371277  0.422702  ...  0.272424  0.439186  0.439186  0.272424   \n",
      "\n",
      "         58        59        60        61        62        63  \n",
      "0  0.272424  0.439186  0.413244  0.439966  0.439966  0.413244  \n",
      "\n",
      "[1 rows x 64 columns]\n",
      "4.1 [1.64073810474965e-12, -5.72458747072346e-17, -0.0876418809415855] [0.43603925 0.45045416 1.25108042]\n",
      "         0         1         2         3         4         5         6   \\\n",
      "0  0.665647  0.200375 -0.200375 -0.665647  0.665647  0.200375 -0.200375   \n",
      "1 -0.399417 -0.399417 -0.399417 -0.399417 -0.120234 -0.120234 -0.120234   \n",
      "2  0.305333  0.305333  0.305333  0.305333  0.305333  0.305333  0.305333   \n",
      "\n",
      "         7         8         9   ...        54        55        56        57  \\\n",
      "0 -0.665647  0.665647  0.200375  ... -0.200375 -0.665647  0.665647  0.200375   \n",
      "1 -0.120234  0.120234  0.120234  ... -0.120234 -0.120234  0.120234  0.120234   \n",
      "2  0.305333  0.305333  0.305333  ... -0.480616 -0.480616 -0.480616 -0.480616   \n",
      "\n",
      "         58        59        60        61        62        63  \n",
      "0 -0.200375 -0.665647  0.665647  0.200375 -0.200375 -0.665647  \n",
      "1  0.120234  0.120234  0.399417  0.399417  0.399417  0.399417  \n",
      "2 -0.480616 -0.480616 -0.480616 -0.480616 -0.480616 -0.480616  \n",
      "\n",
      "[3 rows x 64 columns]\n",
      "         0         1         2         3         4         5         6   \\\n",
      "0  0.344496  0.198343 -0.198343 -0.344496  0.420137  0.274622 -0.274622   \n",
      "\n",
      "         7         8         9   ...        54        55        56        57  \\\n",
      "0 -0.420137  0.420137  0.274622  ... -0.323382 -0.445447  0.445447  0.323382   \n",
      "\n",
      "         58        59        60        61        62        63  \n",
      "0 -0.323382 -0.445447  0.358141  0.219639 -0.219639 -0.358141  \n",
      "\n",
      "[1 rows x 64 columns]\n",
      "5.1 [-2.37023848286065e-13, 0.783171789429109, 0.524537657987883] [0.44530382 0.45564982 0.9098715 ]\n",
      "         0         1         2         3         4         5         6   \\\n",
      "0 -0.397127 -0.397127 -0.397127 -0.397127 -0.397127 -0.397127 -0.397127   \n",
      "1  0.087806  0.414690  0.696243  1.023127  0.246967  0.573851  0.855404   \n",
      "2  0.533711  0.758622  0.952343  1.177254  0.302388  0.527299  0.721020   \n",
      "\n",
      "         7         8         9   ...        54        55        56        57  \\\n",
      "0 -0.397127 -0.397127 -0.397127  ...  0.397127  0.397127  0.397127  0.397127   \n",
      "1  1.182288  0.384056  0.710940  ...  0.855404  1.182288  0.384056  0.710940   \n",
      "2  0.945931  0.103144  0.328055  ...  0.721020  0.945931  0.103144  0.328055   \n",
      "\n",
      "         58        59        60        61        62        63  \n",
      "0  0.397127  0.397127  0.397127  0.397127  0.397127  0.397127  \n",
      "1  0.992493  1.319376  0.543217  0.870101  1.151653  1.478537  \n",
      "2  0.521776  0.746687 -0.128179  0.096732  0.290453  0.515364  \n",
      "\n",
      "[3 rows x 64 columns]\n",
      "         0        1         2         3       4         5         6   \\\n",
      "0  0.371588  0.37075  0.332924  0.293541  0.4647  0.433285  0.376373   \n",
      "\n",
      "         7         8         9   ...        54        55        56        57  \\\n",
      "0  0.332005  0.478133  0.440586  ...  0.376373  0.332005  0.478133  0.440586   \n",
      "\n",
      "         58       59        60       61        62        63  \n",
      "0  0.378372  0.33094  0.399322  0.38697  0.338028  0.291293  \n",
      "\n",
      "[1 rows x 64 columns]\n"
     ]
    }
   ],
   "source": [
    "import pandas\n",
    "for orbital in orbitals:\n",
    "    points = orbital.grid(4)\n",
    "    # values = p.evaluateOrbitals(points, ID=orbital.ID, values=True)\n",
    "    # values = p.evaluateOrbitals(points, ID=orbital.ID)['values']\n",
    "    values = orbital.evaluate(points, values=True)\n",
    "    print(orbital.ID, orbital.centroid, orbital.second_moment_eigenvalues)\n",
    "    print(pandas.DataFrame(points).transpose())\n",
    "    print(pandas.DataFrame(values).transpose())"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%%\n"
    }
   }
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}