name: Python unit tests

on: [ push, pull_request ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [  "3.10" ]

    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          channels: conda-forge, defaults
          use-only-tar-bz2: true  # IMPORTANT: This needs to be set for caching to work properly!
          auto-update-conda: true
          auto-activate-base: true
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          conda info
          uname -a
          conda create --override-channels --name pymolpro-test -c conda-forge 'pysjef>=1.32'
          conda activate pymolpro-test || true
          conda install --update-all
          conda install --file=requirements.txt
          python -m pip install --upgrade pip
          pip install numgrid
          pip install flake8 pytest
          conda list
          which flake8
#          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          conda activate pymolpro-test
          conda list
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest
